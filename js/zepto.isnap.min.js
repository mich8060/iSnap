(function($){	
	$.fn.template = function(data){
		var s = $(this).html().trim();
		if(data){
			for(key in data){
				s = s.replace(new RegExp('\\${'+key+'}','g'), data[key]);
			}
			return $(s);
		}
	}
	
	$.fn.tabs = function(){
		$('main').on('click','.tabs a',function(e){
			$el = $(this);
			$('.tab').hide();
			if($el.attr('data')){
				$tab = "."+$el.attr('data');
				$($tab).show();
			}
			e.preventDefault();
		});
	}
	
	$.fn.facebookComments = function() {
		$fb = $('#facebook-comments');
		$fb.append($('<div />').attr('id','fb-root'));
		$fb.append($('<div id="fb-comments" class="fb-comments" data="comments" data-href="'+location.href+'" data-numposts="10" data-width="100%" data-colorscheme="light" />'));
		$fb.append($('<div />').attr('id','fb-reboot'));
		$fb.append($('<script />').text('FB.XFBML.parse();'));
	}
	
})(Zepto);

$(document).ready(function(){
	
	
	
	if($('.tabs').length){ $(this).tabs(); }	
	
	$('main').on('click','.previews a',function(e){
		$el = $(this);
		$('main').addClass('transition');
		window.setTimeout(function(){
			href = $el.attr('href');
			query = href+' #snap';
			history.pushState({}, $el.attr('title'), href);
			$('main').load(query,function(data, status, xhr){
				window.setTimeout(function(data){
					$('main').removeClass('transition');
	                $(this).facebookComments();
				},200);
			});
		},200);
		e.preventDefault();
	});
	

	
	if($('.custom-form').length){
		$('.custom-form input').keydown(function(e){
			$parent = $(this).closest('li');
			if(e.which == 13){
				if($(this).attr('valid') == "true"){
					$parent.addClass('complete');
					$parent.next().addClass('active').find('input').focus();
					e.preventDefault();
				}else{
					$parent.find('.error').css("opacity", 1);
				}

			}
		}).eq(0).focus();
		
		$('.custom-form .button').click(function(){
			$parent = $(this).closest('li');
			$parent.addClass('complete');
			$parent.next().addClass('active').find('input').focus();
		});
	}
	
	$('#name').keyup(function(e){
		if($(this).val()){
			$(this).attr('valid', false);
		}else{
			$(this).attr('valid', true);
		}
	});
	
	$('#display').keyup(function(e){
		$parent = $(this).closest('li');
		$parent.find('.display').html($(this).val());
		$parent.find('.status').html('&ndash; Checking Availablity');
	});
	
	$('input[type="email"]').keydown(function(e){
		var pattern = new RegExp(/^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i);
		if(pattern.test($(this).val())){
			$(this).attr('valid', true);
		}else{
			$(this).attr('valid', false);
		}
	});
	
	$('input[type="number"]').keydown(function (e) {
        if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
            (e.keyCode == 65 && e.ctrlKey === true) || 
            (e.keyCode >= 35 && e.keyCode <= 39)) {
                 return;
        }
        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
            e.preventDefault();
        }
    });

	$('#signin').submit(function(e){
		$el = $(this);
		e.preventDefault();
		$.ajax({
		  	type: 'POST',
		  	url: $el.attr('action'),
		  	data: $el.serialize(),
		  	dataType: 'json',
		  	timeout: 5000,
		  	context: $('body'),
		  	success: function(data){
				if(data.registered){
					location.reload();
				}else{
					console.log("Invalid Username or Password");
				}
		  	},
		  	error: function(xhr, type){
		    	console.log('Ajax error!')
		  	}
		});
	});
	
	$('.heart').on('click',function(e){
		$el = $(this);
		$.ajax({
		  	type: 'POST',
		  	url: $el.attr('action'),
		  	data: { name:$el.attr('data') },
		  	dataType: 'json',
		  	timeout: 800,
		  	context: $('body'),
		  	success: function(data){
				alert(data);
		  	},
		  	error: function(xhr, type){
		    	console.log('Ajax error!')
		  	}
		});
		
		e.preventDefault();
	});

	$('.modal').css('display','block');

	$('.open-modal').on('click',function(e){
		$('body').addClass('open');
		$('#username').focus();
		e.preventDefault();
	});
	
	$('.close-modal').on('click',function(e){
		$('.overlay').fadeOut(500, function(){
			$('body').removeClass('open');
			window.setTimeout(function(){
				$('.overlay').removeAttr('style');
			},500);
		});
		e.preventDefault();
	});

	$('#zipcode').on('keyup', function(){
		if($(this).val().length >= 5){
			$obj = $(this);
			var zipcode = 'http://maps.googleapis.com/maps/api/geocode/json?address='+$(this).val()+'&sensor=true';
			$.getJSON(zipcode, function(data){
				var info = {}
				$.each(data.results[0].address_components, function(i, item) {
					switch(item.types[0]) {
						case "postal_code":
					        info.zip = item.long_name;
					        break;
					    case "locality":
					        info.city = item.long_name;
					        break;
						case "administrative_area_level_2":
						    info.county = item.long_name;
						    break;
						case "administrative_area_level_1":
							info.state = item.short_name;
							break;
						case "country":
							info.country = item.short_name;
							break;
					    default:
					        break;
					}
		      	});
				format = info.city+", "+info.state+" "+info.zip;
				$obj.next().html(format);
			});
		}
	});
	
});